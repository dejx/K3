[include fluidd.cfg]
[include config/*.cfg]
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_2B0015000E51323532343132-if00
restart_method: command

[virtual_sdcard]
path: /home/dejan/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 2000 # change this to 7500 after commissioning
max_z_velocity: 10   # may be able to increase to 15 after comissioning.
max_z_accel: 100
square_corner_velocity: 8.0 # start at 8, but then increase once you're sure assembly is sound

# [beacon]
# serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_D3AED2055154354D38202020FF0A1E44-if00
# home_method: contact
# home_method_when_homed: proximity
# home_autocalibrate: unhomed
# home_xy_position: 90,90 # update with your safe position
# home_z_hop: 5
# home_z_hop_speed: 30
# home_xy_move_speed: 300

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_D3AED2055154354D38202020FF0A1E44-if00
home_method: contact
home_method_when_homed: proximity
home_autocalibrate: unhomed
contact_max_hotend_temperature: 180
home_xy_position: 90,90
x_offset: -31 # update with offset from nozzle on your machine
y_offset: 0 # update with offset from nozzle on your machine
mesh_main_direction: x
mesh_runs: 2
home_z_hop: 5
home_z_hop_speed: 30
home_xy_move_speed: 300






[bed_mesh]
mesh_min = 20,20
mesh_max = 140,140
speed = 500
horizontal_move_z = 1
probe_count = 25,25
move_check_distance = 3
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0
split_delta_z = 0.0125
mesh_pps = 0,0
zero_reference_position = 90,90

[z_tilt]
z_positions: 
    -74.0, -18.0    # Front Left
    76.0,  217.0    # Rear
    226.0, -18.0    # Front Right

points:
    45, 25          # front left
    101, 160        # rear
    175, 25         # front right

horizontal_move_z: 3 #
retries: 8
retry_tolerance: 0.005
speed: 500


# Force Move used to force a single stepper to move. Not used once setup complete
[force_move]
enable_force_move: true

[heater_fan hotend_fan] # Hotend fan F0
pin: PE8
max_power: 1.0
tachometer_pin: PB1
tachometer_ppr: 2
tachometer_poll_interval: 0.0005
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

[fan] # Partcooling fan
pin: PD15
kick_start_time: 0.5
off_below: 0.10


[extruder]
max_extrude_cross_section: 5
step_pin: PE1
dir_pin: !PE0
enable_pin: !PB2
rotation_distance: 22.8120213152   #Bondtech 5mm Drive Gears
gear_ratio: 50:8
spi_software_miso_pin: PE13
spi_software_mosi_pin: PE14
spi_software_sclk_pin: PE12
microsteps: 32
max_extrude_only_distance: 101
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA15
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: MAX31865
sensor_pin: PF5
min_temp: 5
max_temp: 300
spi_speed: 4000000
rtd_nominal_r: 1000 # PT1000
rtd_num_of_wires: 2
rtd_reference_r: 4300 # PT1000
rtd_use_50Hz_filter: True # Europe
max_power: 1.0
min_extrude_temp: 170
pressure_advance: 0.037
pressure_advance_smooth_time: 0.030
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769


# [pid_profile extruder default]
# pid_profile: 'control' 

# [safe_z_home]
# home_xy_position: 90,90 # update for your machine
# z_hop: 3

[temperature_fan  rdecko]
pin: PD14
max_power: 1
min_power: 1  
max_speed:1
min_temp:1
max_temp: 100
sensor_pin: PC1
sensor_type: Generic 3950
control: curve
points:
  20, 0.7
  25.0, 1

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
[temperature_sensor mcu_temp]
sensor_type: temperature_mcu

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [beacon model default]
#*# model_coef = 1.4333491792929247,
#*# 	1.770978473920391,
#*# 	0.8049858437072869,
#*# 	0.43707881681532984,
#*# 	0.3659230686651196,
#*# 	0.142224999760539,
#*# 	-0.2802026708497757,
#*# 	-0.0856270454095076,
#*# 	0.2763276979281273,
#*# 	0.13694064874646195
#*# model_domain = 1.804231201293333e-07,1.9314970137531824e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 29.830650
#*# model_offset = 0.00000
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.003110, 0.004515, 0.005753, 0.005592, 0.005274, 0.005481, 0.005643, 0.006200, 0.006623, 0.006131, 0.004299, 0.005254, 0.005185, 0.004036, 0.002920, 0.001665, -0.000312, -0.000769, 0.000535, 0.004119, 0.007356, 0.009336, 0.008732, 0.006993, 0.005016
#*# 	-0.000003, 0.000509, 0.001001, 0.003390, 0.002480, 0.002111, 0.000535, 0.001746, 0.002546, 0.001710, 0.000378, 0.000007, 0.000756, 0.000087, -0.000942, -0.001513, -0.004190, -0.007116, -0.006494, -0.003475, -0.001141, 0.002525, 0.004259, 0.003519, 0.000419
#*# 	-0.003529, -0.003144, -0.002665, -0.000861, -0.001877, -0.003060, -0.003232, -0.002448, -0.001121, -0.001849, -0.003927, -0.004065, -0.004292, -0.004172, -0.004956, -0.005600, -0.008272, -0.010601, -0.010568, -0.007647, -0.004856, -0.002867, -0.000391, -0.000963, -0.004944
#*# 	-0.005417, -0.005312, -0.006034, -0.003214, -0.004344, -0.003660, -0.005312, -0.004650, -0.003476, -0.003442, -0.005397, -0.006205, -0.005933, -0.006948, -0.008359, -0.008726, -0.010617, -0.012648, -0.012530, -0.010024, -0.008889, -0.005703, -0.004902, -0.005259, -0.008405
#*# 	-0.006321, -0.006794, -0.007445, -0.005415, -0.006011, -0.006106, -0.006164, -0.005807, -0.004860, -0.004977, -0.006504, -0.006931, -0.006444, -0.007003, -0.008502, -0.009655, -0.011262, -0.012473, -0.013082, -0.011427, -0.010589, -0.009029, -0.007542, -0.008763, -0.011883
#*# 	-0.008015, -0.008176, -0.009391, -0.008648, -0.009203, -0.009148, -0.008611, -0.007410, -0.006062, -0.005125, -0.006641, -0.007431, -0.008361, -0.007983, -0.008867, -0.009136, -0.010816, -0.014364, -0.015256, -0.014035, -0.012041, -0.011225, -0.010291, -0.011123, -0.014442
#*# 	-0.009060, -0.009809, -0.010135, -0.009486, -0.011444, -0.010385, -0.008343, -0.007249, -0.007132, -0.005984, -0.006681, -0.005929, -0.005144, -0.005011, -0.007425, -0.008709, -0.010661, -0.013123, -0.013351, -0.011984, -0.011468, -0.011391, -0.011511, -0.012302, -0.016148
#*# 	-0.011433, -0.011493, -0.012631, -0.012003, -0.012932, -0.011648, -0.010923, -0.009438, -0.007763, -0.005478, -0.004719, -0.003905, -0.003560, -0.004179, -0.005522, -0.006954, -0.009355, -0.013471, -0.014417, -0.013476, -0.012430, -0.012344, -0.012159, -0.013619, -0.016602
#*# 	-0.012295, -0.012002, -0.012164, -0.011685, -0.012720, -0.012508, -0.010780, -0.009016, -0.006310, -0.003738, -0.002645, -0.001466, -0.002587, -0.003330, -0.005617, -0.007629, -0.011188, -0.014006, -0.014716, -0.012898, -0.012383, -0.013535, -0.012592, -0.014261, -0.018123
#*# 	-0.013588, -0.012873, -0.012831, -0.012214, -0.011034, -0.009751, -0.008941, -0.007690, -0.005153, -0.003554, -0.001235, 0.000220, 0.000151, -0.000980, -0.003997, -0.006537, -0.010180, -0.014099, -0.015114, -0.013983, -0.012721, -0.013367, -0.013276, -0.014268, -0.018670
#*# 	-0.013649, -0.013284, -0.012632, -0.011945, -0.010862, -0.009772, -0.007404, -0.007276, -0.005644, -0.003521, -0.000751, 0.000682, 0.000228, -0.001201, -0.004545, -0.007845, -0.011762, -0.014482, -0.015466, -0.013020, -0.013678, -0.014074, -0.013718, -0.015268, -0.019758
#*# 	-0.014902, -0.012452, -0.011751, -0.010458, -0.009223, -0.007615, -0.006199, -0.004773, -0.003177, -0.001938, -0.001832, -0.000510, -0.000836, -0.000561, -0.002213, -0.004988, -0.009618, -0.012663, -0.015104, -0.012397, -0.011873, -0.013150, -0.012544, -0.014393, -0.019146
#*# 	-0.012030, -0.010636, -0.009363, -0.007688, -0.006842, -0.006130, -0.004947, -0.003613, -0.001782, -0.001350, -0.001176, -0.000452, 0.000000, 0.000089, 0.000163, -0.001920, -0.007231, -0.010600, -0.012606, -0.011476, -0.010232, -0.011281, -0.010887, -0.013355, -0.018096
#*# 	-0.010950, -0.009726, -0.007620, -0.005715, -0.004370, -0.003001, -0.002573, -0.003799, -0.003094, -0.001158, 0.000642, 0.001952, 0.002306, 0.002108, 0.000997, -0.000798, -0.004585, -0.007099, -0.009011, -0.007683, -0.009558, -0.011320, -0.009467, -0.011305, -0.017415
#*# 	-0.008369, -0.007924, -0.006747, -0.005291, -0.005190, -0.003915, -0.003549, -0.002705, -0.002077, 0.000184, -0.000029, 0.000461, 0.002018, 0.002410, 0.002437, 0.001656, -0.003790, -0.006773, -0.008362, -0.007821, -0.008485, -0.009670, -0.008463, -0.011124, -0.015782
#*# 	-0.009399, -0.007033, -0.006660, -0.003748, -0.003791, -0.002894, -0.001066, -0.002314, -0.001184, 0.001705, 0.000588, 0.002913, 0.004465, 0.003956, 0.003805, 0.002104, -0.001109, -0.003984, -0.006428, -0.006538, -0.007108, -0.006583, -0.006926, -0.009127, -0.015008
#*# 	-0.004661, -0.004318, -0.003669, -0.002880, -0.002113, -0.001000, -0.000245, 0.000322, -0.000170, 0.000056, 0.000152, 0.001967, 0.003582, 0.004487, 0.003321, 0.002588, -0.001552, -0.003988, -0.006632, -0.006498, -0.006410, -0.006471, -0.006020, -0.008398, -0.013133
#*# 	-0.005547, -0.002745, -0.001612, -0.000068, 0.001628, -0.001151, 0.001545, 0.001572, 0.000815, 0.004757, 0.004166, 0.005383, 0.005548, 0.004968, 0.003325, 0.002661, -0.000466, -0.001940, -0.004628, -0.005788, -0.006012, -0.005291, -0.005015, -0.007320, -0.012929
#*# 	0.000871, 0.000836, -0.000610, 0.001455, 0.001691, 0.001622, 0.003359, 0.002951, 0.003688, 0.003989, 0.002294, 0.003615, 0.005056, 0.004510, 0.003531, 0.002021, -0.002490, -0.005036, -0.005871, -0.004700, -0.004678, -0.005426, -0.004706, -0.007027, -0.012265
#*# 	0.005724, 0.002616, 0.001490, 0.002713, 0.002520, -0.000127, 0.005046, 0.005143, 0.005086, 0.007109, 0.006425, 0.007289, 0.006371, 0.006117, 0.003732, 0.002505, 0.000040, -0.003238, -0.004404, -0.003714, -0.005000, -0.004151, -0.004429, -0.005818, -0.011376
#*# 	0.006212, 0.004775, 0.004086, 0.004007, 0.003760, 0.003497, 0.004983, 0.006433, 0.006942, 0.007354, 0.006827, 0.006512, 0.007782, 0.007036, 0.005771, 0.004052, 0.001040, -0.001211, -0.003587, -0.002233, -0.002608, -0.002638, -0.004337, -0.006264, -0.011165
#*# 	0.011583, 0.006956, 0.005510, 0.006926, 0.006267, 0.006796, 0.007322, 0.007174, 0.007122, 0.008559, 0.009196, 0.010850, 0.011039, 0.008196, 0.006132, 0.005393, 0.003067, 0.000964, 0.000145, -0.001475, -0.002487, -0.001317, -0.002421, -0.004353, -0.009099
#*# 	0.012469, 0.008930, 0.008339, 0.008495, 0.007624, 0.007479, 0.008645, 0.008435, 0.010098, 0.010076, 0.010006, 0.010257, 0.011636, 0.010748, 0.008808, 0.006927, 0.003644, 0.001777, -0.000018, 0.000339, -0.001313, -0.001082, -0.001266, -0.002565, -0.007126
#*# 	0.014833, 0.010342, 0.009190, 0.009798, 0.009185, 0.009998, 0.010508, 0.010541, 0.008913, 0.010124, 0.010032, 0.010340, 0.013666, 0.011161, 0.009748, 0.007832, 0.005384, 0.002149, 0.000662, 0.000563, 0.000313, 0.000273, 0.000304, -0.000963, -0.005319
#*# 	0.017835, 0.013397, 0.011113, 0.011768, 0.011473, 0.011956, 0.010013, 0.009666, 0.011081, 0.009817, 0.008969, 0.010759, 0.011575, 0.011295, 0.009697, 0.007811, 0.004460, 0.002055, 0.001199, 0.001072, 0.000252, 0.000228, 0.001228, -0.000510, -0.003867
#*# x_count = 25
#*# y_count = 25
#*# mesh_x_pps = 0
#*# mesh_y_pps = 0
#*# algo = direct
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 149.0
#*# min_y = 30.0
#*# max_y = 149.0
#*#
#*# [extruder]
#*# pid_version = 1
#*# pid_target = 250.00
#*# pid_tolerance = 0.0200
#*# control = pid
#*# pid_kp = 16.379
#*# pid_ki = 0.724
#*# pid_kd = 92.642
