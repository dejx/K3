[include fluidd.cfg]
[include config/*.cfg]
[include config_backup.cfg]
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_2B0015000E51323532343132-if00
restart_method: command

[virtual_sdcard]
path: /home/dejan/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 2000 # change this to 7500 after commissioning
max_z_velocity: 10   # may be able to increase to 15 after comissioning.
max_z_accel: 100
square_corner_velocity: 8.0 # start at 8, but then increase once you're sure assembly is sound

# [beacon]
# serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_D3AED2055154354D38202020FF0A1E44-if00
# home_method: contact
# home_method_when_homed: proximity
# home_autocalibrate: unhomed
# home_xy_position: 90,90 # update with your safe position
# home_z_hop: 5
# home_z_hop_speed: 30
# home_xy_move_speed: 300

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_D3AED2055154354D38202020FF0A1E44-if00
home_method: contact
home_method_when_homed: proximity
home_autocalibrate: unhomed
contact_max_hotend_temperature: 180
home_xy_position: 90,90
x_offset: -31 # update with offset from nozzle on your machine
y_offset: 0 # update with offset from nozzle on your machine
mesh_main_direction: x
mesh_runs: 2
home_z_hop: 5
home_z_hop_speed: 30
home_xy_move_speed: 300




[bed_mesh]
mesh_min = 20,20
mesh_max = 140,140
speed = 500
horizontal_move_z = 1
probe_count = 25,25
move_check_distance = 3
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0
split_delta_z = 0.0125
mesh_pps = 0,0
zero_reference_position = 90,90

[z_tilt]
z_positions: 
    -74.0, -18.0    # Front Left
    76.0,  217.0    # Rear
    226.0, -18.0    # Front Right

points:
    45, 25          # front left
    101, 160        # rear
    175, 25         # front right

horizontal_move_z: 2 #
retries: 8
retry_tolerance: 0.005
speed: 500


# Force Move used to force a single stepper to move. Not used once setup complete
[force_move]
enable_force_move: true

[heater_fan hotend_fan] # Hotend fan F0
pin: PE8
max_power: 1.0
tachometer_pin: PB1
tachometer_ppr: 2
tachometer_poll_interval: 0.0005
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

[fan] # Partcooling fan
pin: PD15
kick_start_time: 0.5
off_below: 0.10


[extruder]
max_extrude_cross_section: 5
step_pin: PE1
dir_pin: !PE0
enable_pin: !PB2
rotation_distance: 22.8120213152   #Bondtech 5mm Drive Gears
gear_ratio: 50:8
spi_software_miso_pin: PE13
spi_software_mosi_pin: PE14
spi_software_sclk_pin: PE12
microsteps: 32
max_extrude_only_distance: 101
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA15
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: MAX31865
sensor_pin: PF5
min_temp: 5
max_temp: 300
spi_speed: 4000000
rtd_nominal_r: 1000 # PT1000
rtd_num_of_wires: 2
rtd_reference_r: 4300 # PT1000
rtd_use_50Hz_filter: True # Europe
max_power: 1.0
min_extrude_temp: 170
pressure_advance: 0.037
pressure_advance_smooth_time: 0.030
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769


# [pid_profile extruder default]
# pid_profile: 'control' 

# [safe_z_home]
# home_xy_position: 90,90 # update for your machine
# z_hop: 3

[temperature_fan  rdecko]
pin: PD14
max_power: 1
min_power: 1  
max_speed:1
min_temp:1
max_temp: 100
sensor_pin: PC1
sensor_type: Generic 3950
control: curve
points:
  20, 0.7
  25.0, 1

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
[temperature_sensor mcu_temp]
sensor_type: temperature_mcu



[gcode_macro DHOME]
description: d homing
gcode:
    G28
    Z_TILT_ADJUST
    G28 Z

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [beacon model default]
#*# model_coef = 1.4489443690995383,
#*# 	  1.796210194753352,
#*# 	  0.811377535699312,
#*# 	  0.3950926581205452,
#*# 	  0.31348458383375427,
#*# 	  0.2300283518997159,
#*# 	  -0.21488116744282218,
#*# 	  -0.20873201410093223,
#*# 	  0.24129852122962203,
#*# 	  0.1889663736707358
#*# model_domain = 1.8138524703973458e-07,1.9325769762426702e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 30.484719
#*# model_offset = 0.00000
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.010959, 0.010679, 0.009558, 0.007447, 0.007531, 0.007677, 0.007307, 0.007257, 0.008813, 0.011841, 0.015654, 0.018304, 0.019447, 0.018818, 0.015020, 0.009779, 0.005336, 0.002501, 0.000825, 0.004446, 0.008127, 0.011014, 0.012999, 0.012711, 0.009735
#*# 	0.005877, 0.006940, 0.006876, 0.004668, 0.003596, 0.002595, 0.003510, 0.003537, 0.003711, 0.006804, 0.010936, 0.014347, 0.016677, 0.015978, 0.012963, 0.008505, 0.001992, -0.001022, -0.002907, -0.000533, 0.002668, 0.006457, 0.007885, 0.008323, 0.006342
#*# 	0.002639, 0.003782, 0.003217, 0.002878, 0.001626, 0.000002, -0.000006, 0.000121, 0.000547, 0.002727, 0.006482, 0.009708, 0.011911, 0.011248, 0.007781, 0.003008, -0.001227, -0.004392, -0.007462, -0.004748, -0.001492, 0.002097, 0.004679, 0.004414, 0.002123
#*# 	-0.001293, -0.000171, -0.000653, -0.001073, -0.002783, -0.003807, -0.004745, -0.004695, -0.004807, -0.003212, -0.000769, -0.000036, 0.002605, 0.001438, -0.000887, -0.004593, -0.007994, -0.011518, -0.013320, -0.010411, -0.007763, -0.004553, -0.002254, -0.001579, -0.004332
#*# 	-0.004313, -0.003385, -0.003178, -0.004137, -0.004566, -0.006290, -0.006629, -0.006880, -0.008273, -0.007577, -0.006482, -0.005525, -0.005028, -0.005576, -0.007720, -0.009794, -0.012138, -0.014625, -0.015806, -0.014728, -0.011263, -0.008281, -0.006562, -0.006129, -0.008612
#*# 	-0.006084, -0.004146, -0.005060, -0.005811, -0.006708, -0.007792, -0.008856, -0.010138, -0.010175, -0.009972, -0.009272, -0.009609, -0.009567, -0.010455, -0.011751, -0.012747, -0.014910, -0.017840, -0.017505, -0.015573, -0.013624, -0.011757, -0.009660, -0.009429, -0.012129
#*# 	-0.004878, -0.004095, -0.004704, -0.006470, -0.007373, -0.008492, -0.010111, -0.009770, -0.010901, -0.011036, -0.010523, -0.011340, -0.010879, -0.012050, -0.012759, -0.014378, -0.015532, -0.017051, -0.017262, -0.015608, -0.014597, -0.013259, -0.011805, -0.012570, -0.014923
#*# 	-0.006433, -0.005237, -0.006398, -0.008380, -0.009814, -0.011080, -0.012054, -0.012960, -0.012638, -0.012998, -0.012020, -0.011621, -0.011374, -0.012337, -0.013431, -0.013982, -0.015631, -0.016370, -0.016562, -0.015753, -0.014694, -0.014284, -0.013235, -0.013460, -0.017333
#*# 	-0.007056, -0.006574, -0.007482, -0.008743, -0.009656, -0.010347, -0.012119, -0.012605, -0.012994, -0.012410, -0.011545, -0.010648, -0.010115, -0.010524, -0.011778, -0.012487, -0.013259, -0.015519, -0.016095, -0.015145, -0.014299, -0.014333, -0.014042, -0.014511, -0.017629
#*# 	-0.008686, -0.007323, -0.008466, -0.010210, -0.010590, -0.011316, -0.012191, -0.012145, -0.012841, -0.011347, -0.010567, -0.007972, -0.006169, -0.007795, -0.009369, -0.010896, -0.012173, -0.013574, -0.015496, -0.014637, -0.013430, -0.013307, -0.013595, -0.014421, -0.017766
#*# 	-0.007223, -0.006324, -0.006322, -0.007802, -0.008679, -0.009122, -0.010282, -0.010388, -0.011399, -0.009743, -0.007491, -0.004054, -0.003432, -0.005183, -0.007067, -0.008368, -0.010543, -0.013336, -0.013625, -0.014503, -0.014233, -0.013843, -0.014191, -0.014992, -0.018689
#*# 	-0.009199, -0.007864, -0.007744, -0.009375, -0.009836, -0.009193, -0.008865, -0.009618, -0.010232, -0.009392, -0.006121, -0.004800, -0.004444, -0.005671, -0.007112, -0.007763, -0.011175, -0.014197, -0.015904, -0.015005, -0.014990, -0.014597, -0.015048, -0.016478, -0.020606
#*# 	-0.010500, -0.007800, -0.007251, -0.008050, -0.007425, -0.007298, -0.007561, -0.007176, -0.007269, -0.006895, -0.005682, -0.004083, -0.002492, -0.003890, -0.005856, -0.007916, -0.009380, -0.012083, -0.013506, -0.013334, -0.013040, -0.013943, -0.013900, -0.015267, -0.019686
#*# 	-0.010234, -0.007469, -0.006388, -0.006748, -0.005841, -0.005270, -0.005232, -0.003874, -0.005453, -0.006115, -0.004373, -0.001717, -0.001655, -0.003396, -0.004607, -0.004724, -0.005877, -0.010293, -0.012942, -0.012029, -0.011666, -0.011799, -0.011779, -0.013377, -0.018071
#*# 	-0.007579, -0.005412, -0.004181, -0.004278, -0.003591, -0.003370, -0.003280, -0.003972, -0.003804, -0.003516, -0.002581, -0.001880, -0.000866, -0.001648, -0.002015, -0.001501, -0.005330, -0.007819, -0.010483, -0.010214, -0.010221, -0.009641, -0.011420, -0.012800, -0.016788
#*# 	-0.005831, -0.002943, -0.002112, -0.001607, -0.001259, -0.000909, -0.001458, -0.001373, -0.001483, -0.002223, -0.001648, 0.000928, 0.002605, 0.001032, 0.000988, 0.001268, -0.001201, -0.005414, -0.008517, -0.008527, -0.008525, -0.007609, -0.008719, -0.011705, -0.016116
#*# 	-0.003969, -0.001333, -0.000700, -0.000861, -0.000870, 0.000263, -0.000171, 0.000477, -0.001120, 0.000247, -0.000930, 0.000656, 0.002399, 0.002785, 0.001507, 0.001081, -0.000441, -0.003694, -0.007200, -0.007336, -0.007461, -0.008127, -0.008049, -0.009728, -0.014540
#*# 	-0.000970, 0.000608, 0.003112, 0.000650, 0.001764, 0.001322, 0.002067, 0.001632, 0.001151, 0.001218, 0.002267, 0.003281, 0.003808, 0.002695, 0.004263, 0.003441, 0.001099, -0.003293, -0.004427, -0.004601, -0.005646, -0.005470, -0.006298, -0.007652, -0.012266
#*# 	0.005135, 0.005308, 0.003732, 0.003260, 0.003546, 0.004555, 0.003537, 0.002901, 0.002855, 0.003216, 0.004604, 0.003821, 0.004183, 0.003995, 0.003171, 0.002553, 0.000347, -0.003290, -0.005416, -0.003833, -0.004001, -0.005743, -0.005617, -0.007911, -0.012671
#*# 	0.009889, 0.005926, 0.008716, 0.004867, 0.005433, 0.001922, 0.005354, 0.005641, 0.005639, 0.005345, 0.006133, 0.006493, 0.006192, 0.005273, 0.004388, 0.003398, 0.000203, -0.002673, -0.002861, -0.003522, -0.004108, -0.003734, -0.005221, -0.006703, -0.010978
#*# 	0.017468, 0.011375, 0.008564, 0.009262, 0.008132, 0.007952, 0.006631, 0.005553, 0.006059, 0.007066, 0.008698, 0.008803, 0.008349, 0.006094, 0.005970, 0.004001, 0.001112, -0.001925, -0.002761, -0.002788, -0.003881, -0.003528, -0.005143, -0.007406, -0.011507
#*# 	0.023749, 0.015194, 0.009661, 0.010315, 0.010660, 0.006677, 0.010438, 0.009662, 0.009619, 0.010603, 0.011078, 0.011002, 0.010518, 0.009773, 0.008853, 0.005905, 0.003413, 0.001706, -0.000627, -0.000402, -0.001247, -0.000932, -0.002861, -0.004609, -0.008991
#*# 	0.030351, 0.021320, 0.015289, 0.015109, 0.013428, 0.013659, 0.011960, 0.010942, 0.011832, 0.011187, 0.013504, 0.014272, 0.013435, 0.011261, 0.010480, 0.010220, 0.006590, 0.001311, 0.001131, 0.002477, 0.001713, -0.000023, -0.000985, -0.003291, -0.006778
#*# 	0.033287, 0.021867, 0.016281, 0.015851, 0.015399, 0.011696, 0.015499, 0.015299, 0.014140, 0.011640, 0.013422, 0.013090, 0.013973, 0.014134, 0.011514, 0.009741, 0.007157, 0.004993, 0.001796, 0.002889, 0.002098, 0.002400, 0.001218, -0.000952, -0.004567
#*# 	0.036738, 0.024925, 0.019932, 0.018363, 0.018032, 0.014890, 0.017586, 0.017440, 0.014273, 0.017892, 0.015116, 0.015964, 0.016305, 0.015174, 0.014520, 0.012499, 0.008913, 0.005294, 0.004015, 0.005144, 0.004404, 0.002842, 0.002459, 0.000732, -0.002461
#*# x_count = 25
#*# y_count = 25
#*# mesh_x_pps = 0
#*# mesh_y_pps = 0
#*# algo = direct
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 145.0
#*# min_y = 20.0
#*# max_y = 145.0
#*#
#*# [extruder]
#*# pid_version = 1
#*# pid_target = 250.00
#*# pid_tolerance = 0.0200
#*# control = pid
#*# pid_kp = 16.379
#*# pid_ki = 0.724
#*# pid_kd = 92.642
